swagger: "2.0"
info:
  description: "商品のデータの登録・検索・変更・削除を行うRESTfulAPIアプリケーション"
  version: "1.0.0"
  title: "RESTfulなAPI"
host: "localhost:8000"
basePath: "/api"
tags:
  - name: "items"
    description: "itemsに関して、登録・編集・削除・検索"
schemes:
  - "http"

paths:
  /items:
    get:
      tags:
        - "items"
      summary: "アイテム全件取得"
      description: "アイテムを全件取得する"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/Content'
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: 'Internal Server Error'
    post:
      tags:
        - "items"
      summary: "アイテム新規登録"
      description: "アイテムを一件登録する"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: "#/definitions/PostContent"
      responses:
        201:
          description: "Created"
          schema:
            $ref: '#/definitions/CreatedContent'
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: 'Internal Server Error'

  /items/id:
    get:
      tags:
        - "items"
      summary: "アイテムデータ１件取得"
      description: "指定したIDのアイテム情報をを取得する"
      parameters:
        - in: "path"
          name: "id"
          description: "商品id"
          required: true
          type: "integer"
          format: "int"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/SelectedContent'
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: 'Internal Server Error'
    put:
      tags:
        - "items"
      summary: "アイテム更新"
      description: "指定した1件のアイテムの情報を更新する"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "アイテムid"
          required: true
          type: "integer"
          format: "int"
        - in: "body"
          name: "body"
          required: false
          schema:
            $ref: '#/definitions/PostContent'

      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/UpdatedContent'
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: 'Internal Server Error'
    delete:
      tags:
        - "items"
      summary: "アイテム削除"
      description: "指定した１件のアイテムを削除する"
      parameters:
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/UpdatedContent'
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: 'Internal Server Error'

  /items/search:
    post:
      tags:
        - "items"
      summary: "アイテム検索"
      description: "アイテム名をキーワードでLIKE検索する"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "keyword"
          description: "キーワード"
          required: true
          schema:
            type: object
            required:
              - "keyword"
            properties:
              keyword:
                type: string
                example: "apple"
      responses:
        200:
          description: "OK"
          schema:
            $ref: '#/definitions/UpdatedContent'
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: 'Internal Server Error'


definitions:
  Item:
    type: object
    properties:
      id:
        type: integer
        format: int
        example: 1
      name:
        type: string
        example: apple
      description:
        type: string
        example: fruit
      price:
        type: integer
        format: int
        example: 100
      image:
        type: string
        example:
      created_at:
        type: string
        format: date-time
        example: '2019-01-01 00:00:00'
      update_at:
        type: string
        format: date-time
        example: '2019-01-01 00:00:00'

  Content:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Item'

  CreatedContent:
    type: object
    properties:
      created_item:
        $ref: '#/definitions/Item'

  SelectedContent:
    type: object
    properties:
      selected_item:
        $ref: '#/definitions/Item'

  UpdatedContent:
    type: object
    properties:
      updated_item:
        $ref: '#/definitions/Item'

  SearchedContent:
    type: object
    properties:
      searched_item:
        $ref: '#/definitions/Item'

  PostContent:
    type: object
    required:
      - "name"
      - "price"
      - "description"
      - "image"
    properties:
      name:
        type: "string"
        example: "apple"
      description:
        type: "string"
        example: "fruit"
      price:
        type: integer
        example: 100
      image:
        type: "string"
        example: ""